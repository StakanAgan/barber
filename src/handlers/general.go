package handlers

import (
	"benny/src/repository"
	"benny/src/utils"
	"fmt"
	tele "gopkg.in/telebot.v3"
	"log"
	"sort"
)

type Handler func(c tele.Context) error

func HandleStart(store *repository.Store) Handler {
	return func(c tele.Context) error {
		barber, err := store.Barber().GetByTelegramId(uint64(c.Chat().ID))
		if err != nil {
			return c.Send("–ö–∞–∫–∞—è-—Ç–æ –æ—à–∏–±–∫–∞...")
		}
		if barber.Missing() {
			log.Printf("INFO: User %d try to Start bot", uint64(c.Chat().ID))
			customer, err := store.Customer().GetByTelegramId(c.Chat().ID)
			if err != nil {
				return c.Send("–ö–∞–∫–∞—è-—Ç–æ –æ—à–∏–±–∫–∞...")
			}
			if customer.Missing() {
				PhoneRequestKeyboard.Reply(PhoneRequestKeyboard.Row(BtnRequestPhone))
				return c.Send("–ó–∞–¥–µ–ª–∏—Å—å —Ü–∏—Ñ—Ä–∞–º–∏, —á—Ç–æ–±—ã –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —Å—Ç—Ä–∏–≥—É. –ü—Ä–æ—Å—Ç–æ –Ω–∞–∂–º–∏ –Ω–∞ <b>‚òéÔ∏è –ü–æ–¥–µ–ª–∏—Ç—å—Å—è —Ü–∏—Ñ—Ä–∞–º–∏</b> –≤–Ω–∏–∑—É üëáüèº", PhoneRequestKeyboard, tele.ModeHTML)
			}
			MainCustomerKeyboard.Inline(MainCustomerKeyboard.Row(BtnCreateVisit))
			return c.Send(fmt.Sprintf("–í–µ–ª–∫–æ–º, %s", customer.FullName), MainCustomerKeyboard)
		}
		nextShift, err := store.Shift().GetNext(barber.Id.String())
		if err != nil {
			return c.Send("–û—à–∏–±–æ—á–∫–∞ –≤—ã—à–ª–∞")
		}
		txt := fmt.Sprintf("–°–∞–ª—é—Ç, %s", barber.FullName)
		if !nextShift.Missing() {
			txt += fmt.Sprintf("\n–°–ª–µ–¥—É—é—â–∞—è —Å–º–µ–Ω–∞ <b>%s</b>\n—Å <b>%s –¥–æ %s</b>\n\n",
				nextShift.PlannedFrom.Add(barber.TimeOffset()).Format("02.01.2006"),
				nextShift.PlannedFrom.Add(barber.TimeOffset()).Format("15:04"),
				nextShift.PlannedTo.Add(barber.TimeOffset()).Format("15:04"),
			)
			if len(nextShift.Visits) == 0 {
				goto send
			}

			dateSortedVisits := make(utils.TimeSlice, 0, len(nextShift.Visits))
			sort.Sort(dateSortedVisits)
			for index, visit := range nextShift.Visits {
				totalPrice, _ := visit.TotalPrice.Get()
				visitTxt := fmt.Sprintf("\n<b>%d. %s - %s</b>\n%s %d ‚ÇΩ\n%s +%s\n",
					index+1, visit.PlannedFrom.Add(barber.TimeOffset()).Format("15:04"), visit.PlannedTo.Add(barber.TimeOffset()).Format("15:04"),
					visit.Service.Title, totalPrice,
					visit.Customer.FullName, visit.Customer.Phone)
				txt += visitTxt
			}
		}
	send:
		MainBarberKeyboard.Reply(MainBarberKeyboard.Row(BtnShifts), MainBarberKeyboard.Row(BtnServices))
		return c.Send(txt, MainBarberKeyboard, tele.ModeHTML)
	}
}
